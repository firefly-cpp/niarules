% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_coral_plots.R
\name{build_coral_plots}
\alias{build_coral_plots}
\title{Build Data for Coral Plot Visualization from Association Rules}
\usage{
build_coral_plots(arules)
}
\arguments{
\item{arules}{An object containing association rules, typically of class \code{rules} from the
\pkg{arules} or \pkg{niarules} package.}
}
\value{
A list with three components:
\describe{
  \item{\code{nodes}}{A data frame containing node positions, IDs, item names, and radii.}
  \item{\code{edges}}{A data frame of edges with coordinates, widths, and colors.}
  \item{\code{grid_size}}{An integer representing the layout grid dimension.}
}
}
\description{
Converts an \code{arules}-like object into a structured list containing nodes, edges, and grid size
suitable for rendering with coral plot functions (e.g., \code{render_coral_rgl}).
Internally, this function serializes the rules to a temporary CSV file, processes them into
wide format, and calls \code{niarules::buildCoralPlots()} to compute layout geometry.
}
\details{
This function:
\enumerate{
  \item Writes the input rules to a temporary CSV file using \code{niarules::write_association_rules_to_csv()}.
  \item Reads the CSV back in as a standard R data frame.
  \item Transforms the data into a wide format with one row per rule and columns \code{lhs_1}, \code{lhs_2}, etc.
  \item Computes the number of unique plots needed (based on consequents) and determines a square grid size.
  \item Calls \code{niarules::buildCoralPlots()} to compute the layout.
}

This transformation is necessary to bridge the format expected by the layout algorithm
with the format used in rule mining packages like \pkg{arules}.
}
